#!/usr/bin/python
import sys, time, subprocess, getopt, signal
sys.path.append("./lib")
from RpiCobalt.RpiCobaltButtons import RpiCobaltButtons
from RpiCobalt.RpiCobaltLCD import RpiCobaltLCD


# local class to implement buttons.


def signal_handler(signal, frame):
	rclcd.disconnect()
	print('You pressed Ctrl+C!')
	sys.exit(0)

pretend = False
def parseArgs(argv):
	global pretend
	try:
		opts, args = getopt.getopt(argv, "hp",["help", "pretend"])
	except getopt.GetoptError:
		print sys.argv[0] + ": [-h | --help] [-p | --pretend]\n\n"
		sys.exit(2)
	for opt, arg in opts:
		if(opt in ("-h", "--help")):
			print sys.argv[0] + ": [-h | --help] [-p | --pretend]\n\n"
			sys.exit()
		elif(opt in ("-p", "--pretend")):
			pretend=True


if __name__ == "__main__":
	parseArgs(sys.argv[1:])
	
signal.signal(signal.SIGINT, signal_handler)

rcbtn = RpiCobaltButtons()

rclcd = RpiCobaltLCD()
rclcd.pretend = pretend
rclcd.init("/dev/ttyAMA0", "115200")
rclcd.connect()
rclcd.write("This is a test message.")

time.sleep(1)
counter=0
button_line = "";
while(rclcd.connected) :
	
	# button read from the LCD lib
	# and send it to the button lib for processing.
	#rcbtn.parseButtons(rclcd.readButtons())
	sys.stdout.write("              \r")
	print rcbtn.parseButtons(rclcd.readButtons())
	sys.stdout.write("\r\033[1A")
	statusMsg = subprocess.check_output("./status")
	statusMsg = statusMsg.rstrip();
	if(statusMsg != "") : 
		rclcd.write(statusMsg + "\n")
	else: 
		rclcd.write("RPi Cobalt      v. 0.1\n")
	if(rclcd.pretend): 
		time.sleep(1)


